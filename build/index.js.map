{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  PlaybackConfig,\n  Player,\n  PlayerAPI,\n  SourceConfig,\n  StyleConfig\n} from 'bitmovin-player';\nimport { UIFactory } from 'bitmovin-player-ui';\nimport mimeTypes from 'mime-types';\nimport './scss/index.scss';\n\nexport type BitMovinPlayerProps = {\n  lincenseKey: string;\n  src: string;\n  source?: SourceConfig;\n  playback?: PlaybackConfig;\n  style?: StyleConfig;\n};\n\nconst BitMovinPlayer: React.FC<BitMovinPlayerProps> = ({\n  lincenseKey,\n  src,\n  source,\n  playback,\n  style\n}) => {\n  const playerWrapperRef = useRef<HTMLDivElement>(null);\n  const [player, setPlayer] = useState<PlayerAPI>();\n\n  const createPlayer = useCallback(\n    (elementContainer: HTMLElement) => {\n      return new Player(elementContainer, {\n        key: lincenseKey,\n        ui: false,\n        playback: playback || {},\n        style: style || {}\n      });\n    },\n    [lincenseKey, playback, style]\n  );\n\n  const processSource = useCallback(() => {\n    if (!src) return source || {};\n    const mime = mimeTypes.lookup(src);\n    let newSource: SourceConfig = {};\n    if (mime === 'application/vnd.apple.mpegurl') newSource.hls = src;\n    else if (mime === 'application/dash+xml') newSource.dash = src;\n    else if (mime) newSource.progressive = [{ url: src, type: mime }];\n    newSource = { ...source, ...newSource };\n    return newSource;\n  }, [src, source]);\n\n  // Create player\n  useEffect(() => {\n    if (playerWrapperRef.current) {\n      const newPlayer = createPlayer(playerWrapperRef.current);\n      UIFactory.buildDefaultSmallScreenUI(newPlayer);\n      setPlayer(newPlayer);\n    }\n  }, [createPlayer, playerWrapperRef]);\n\n  useEffect(() => {\n    player?.load(processSource());\n  }, [processSource, player]);\n\n  return <div ref={playerWrapperRef} />;\n};\n\nexport default BitMovinPlayer;\n"],"names":["useRef","useState","useCallback","Player","mimeTypes","useEffect","UIFactory","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAoBM,cAAc,GAAkC,UAAC,EAMtD;QALC,WAAW,iBAAA,EACX,GAAG,SAAA,EACH,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,KAAK,WAAA;IAEL,IAAM,gBAAgB,GAAGA,YAAM,CAAiB,IAAI,CAAC,CAAC;IAChD,IAAA,KAAsBC,cAAQ,EAAa,EAA1C,MAAM,QAAA,EAAE,SAAS,QAAyB,CAAC;IAElD,IAAM,YAAY,GAAGC,iBAAW,CAC9B,UAAC,gBAA6B;QAC5B,OAAO,IAAIC,qBAAM,CAAC,gBAAgB,EAAE;YAClC,GAAG,EAAE,WAAW;YAChB,EAAE,EAAE,KAAK;YACT,QAAQ,EAAE,QAAQ,IAAI,EAAE;YACxB,KAAK,EAAE,KAAK,IAAI,EAAE;SACnB,CAAC,CAAC;KACJ,EACD,CAAC,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,CAC/B,CAAC;IAEF,IAAM,aAAa,GAAGD,iBAAW,CAAC;QAChC,IAAI,CAAC,GAAG;YAAE,OAAO,MAAM,IAAI,EAAE,CAAC;QAC9B,IAAM,IAAI,GAAGE,6BAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,SAAS,GAAiB,EAAE,CAAC;QACjC,IAAI,IAAI,KAAK,+BAA+B;YAAE,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC;aAC7D,IAAI,IAAI,KAAK,sBAAsB;YAAE,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC;aAC1D,IAAI,IAAI;YAAE,SAAS,CAAC,WAAW,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAClE,SAAS,yBAAQ,MAAM,GAAK,SAAS,CAAE,CAAC;QACxC,OAAO,SAAS,CAAC;KAClB,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;;IAGlBC,eAAS,CAAC;QACR,IAAI,gBAAgB,CAAC,OAAO,EAAE;YAC5B,IAAM,SAAS,GAAG,YAAY,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACzDC,0BAAS,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;YAC/C,SAAS,CAAC,SAAS,CAAC,CAAC;SACtB;KACF,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAErCD,eAAS,CAAC;QACR,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,CAAC,aAAa,EAAE,EAAE;KAC/B,EAAE,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;IAE5B,OAAOE,iDAAK,GAAG,EAAE,gBAAgB,GAAI,CAAC;AACxC;;;;"}